swagger: "2.0"
info:
  version: "1.0.0"
  title: Example API
  description: API documentation for Auth, User, and Role routes

basePath: /
schemes:
  - https
  - http

tags:
  - name: auth
    description: auth API
  - name: users
    description: users API
  - name: roles
    description: roles API

paths:
  /login:
    post:
      tags:
        - auth
      summary: Login User
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        200:
          description: OK
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Server Error
  /signup:
    post:
      tags:
        - auth
      summary: Signup User
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        201:
          description: Created
        400:
          description: Bad Request
        409:
          description: Conflict
        500:
          description: Server Error

  /logout:
    post:
      tags:
        - auth
      summary: Logout User
      responses:
        200:
          description: OK
        500:
          description: Server Error

  /refresh:
    post:
      tags:
        - auth
      summary: Refresh Token
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        500:
          description: Server Error
  /users/me:
    get:
      tags:
        - users
      summary: Find User By Id
      responses:
        200:
          description: OK
        500:
          description: Server Error
  /users:
    get:
      tags:
        - users
      summary: Find All Users
      responses:
        200:
          description: OK
        500:
          description: Server Error
    post:
      tags:
        - users
      summary: Add User
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        201:
          description: Created
        400:
          description: Bad Request
        409:
          description: Conflict
        500:
          description: Server Error

  /users/{id}:
    get:
      tags:
        - users
      summary: Find User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          type: string
      responses:
        200:
          description: OK
        409:
          description: Conflict
        500:
          description: Server Error
    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          type: string
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        200:
          description: OK
        400:
          description: Bad Request
        409:
          description: Conflict
        500:
          description: Server Error
    delete:
      tags:
        - users
      summary: Delete User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          type: string
      responses:
        200:
          description: OK
        409:
          description: Conflict
        500:
          description: Server Error
  /users/pagination:
    get:
      tags:
        - users
      summary: Find Users By Page
      parameters:
        - name: page
          in: query
          description: Page Number
          required: false
          type: string
          default: '1'
        - name: limit
          in: query
          description: Limit Number
          required: false
          type: string
          default: '2'
        
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/users'
        400:
          description: Bad Request
        409:
          description: Conflict
        500:
          description: Server Error

  /roles:
    get:
      tags:
        - roles
      summary: Find All Roles
      responses:
        200:
          description: OK
        500:
          description: Server Error
    post:
      tags:
        - roles
      summary: Add Role
      parameters:
        - name: body
          in: body
          description: role Data
          required: true
          schema:
            $ref: '#/definitions/roles'
      responses:
        201:
          description: Created
        400:
          description: Bad Request
        409:
          description: Conflict
        500:
          description: Server Error
  /roles/{id}:
    get:
      tags:
        - roles
      summary: Find Role By Id
      parameters:
        - name: id
          in: path
          description: Role Id
          required: true
          type: string
      responses:
        200:
          description: OK
        409:
          description: Conflict
        500:
          description: Server Error
    put:
      tags:
        - roles
      summary: Update Role By Id
      parameters:
        - name: id
          in: path
          description: Role Id
          required: true
          type: string
        - name: body
          in: body
          description: role Data
          required: true
          schema:
            $ref: '#/definitions/roles'
      responses:
        200:
          description: OK
        400:
          description: Bad Request
        409:
          description: Conflict
        500:
          description: Server Error
    delete:
      tags:
        - roles
      summary: Delete Role By Id
      parameters:
        - name: id
          in: path
          description: Role Id
          required: true
          type: string
      responses:
        200:
          description: OK
        409:
          description: Conflict
        500:
          description: Server Error
  /roles/role-to-user:
    post:
      tags:
        - role-to-user
      summary: Assign Role To User By Id
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/role-to-user'
      responses:
        201:
          description: Created
        409:
          description: Conflict
        500:
          description: Server Error
    delete:
    tags:
      - role-to-user
    summary: Remove Role From User By Id
    parameters:
      - name: roleId
        in: query
        required: true
        type: string
      - name: userId
        in: query
        required: true
        type: string
    responses:
      200:
        description: Role removed
      409:
        description: Conflict
      500:
        description: Server Error

definitions:
  users:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password

  roles:
    type: object
    required:
      - name
      - description
    properties:
      name:
        type: string
        description: role name
      description:
        type: string
        description: role description

  role-to-user:
    type: object
    required:
      - roleId
      - userId
    properties:
      roleId:
        type: string
        description: role id
      userId:
        type: string
        description: user id

